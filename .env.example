# Environment variables for docker-compose deployment of mygpo

# PostgreSQL Settings
# These MUST match the user/password/db created by the postgres container
POSTGRES_DB=mygpo
POSTGRES_USER=mygpo
POSTGRES_PASSWORD=changeme_a_very_strong_password # IMPORTANT: Change this to a strong, unique password!

# mygpo Application Settings
# --------------------------

# IMPORTANT: Generate a long, random, secret string for this!
# Example generation command: openssl rand -base64 32
MYGPO_SECRET_KEY=changeme_a_very_long_random_secret_key

# Comma-separated list of allowed hostnames/IPs for your mygpo instance
# Example: MYGPO_ALLOWED_HOSTS=gpodder.yourdomain.com,www.gpodder.yourdomain.com,localhost
MYGPO_ALLOWED_HOSTS=localhost,127.0.0.1

# The full base URL of your mygpo instance (used for generating links)
# Example: MYGPO_DEFAULT_BASE_URL=https://gpodder.yourdomain.com
MYGPO_DEFAULT_BASE_URL=http://localhost:8000

# Optional: Set Django Debug mode (defaults to False in docker-compose.yml if not set here)
# Set to True ONLY for development/debugging, NEVER in production!
# DEBUG=True

# Optional: Admin name and email for error reports (see Django ADMINS setting)
# ADMINS="Your Name <your.email@example.com>"

# Optional: Email settings (if you want mygpo to send emails)
# See Django documentation for email backend settings (e.g., EMAIL_HOST, EMAIL_PORT, etc.)
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# EMAIL_HOST=smtp.example.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=your_smtp_user
# EMAIL_HOST_PASSWORD=your_smtp_password
# DEFAULT_FROM_EMAIL=mygpo@yourdomain.com
